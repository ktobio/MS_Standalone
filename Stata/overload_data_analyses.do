capture log closeclearset more offssc install outreg2log using "logs\overload_analyses_$S_DATE", replacecapture log closeclearset more offset scheme s1coloruse "data/cultureofwork_DB"g db_firmsize=""g db_firmsize_sort=0drop counterg counter=1g db_number_obs=0drop if msgSentPerUser_int==. & msgSentPerUser_ext==. & mtgsPerUser==. & mtgHoursPerAttendee==.quietly tab Country, gen(Countrydum)*Creating firmsize for DB data*forvalues x=1/25 {display "Firm Size = " `x'count if max_emp==`x'replace db_firmsize="Firm Size = `x'" if max_emp==`x'replace db_firmsize_sort=db_firmsize_sort+ `x' if  max_emp==`x'egen sum=sum(counter) if  max_emp==`x'replace db_number_obs=sum if  max_emp==`x'drop sum}forvalues x=26(5)100 {local y=`x'+4display "Firm Size = " `x' " to " `y'count if max_emp>=`x' & max_emp<=`y'replace db_firmsize="Firm Size =  `x'  to  `y'" if max_emp>=`x' & max_emp<=`y'replace db_firmsize_sort=db_firmsize_sort+ `x' if max_emp>=`x' & max_emp<=`y'egen sum=sum(counter) if  max_emp>=`x' & max_emp<=`y'replace db_number_obs=sum if  max_emp>=`x' & max_emp<=`y'drop sum}forvalues x=101(50)250 {local y=`x'+49display "Firm Size = " `x' " to " `y'count if max_emp>=`x' & max_emp<=`y'replace db_firmsize="Firm Size =  `x'  to  `y'" if max_emp>=`x' & max_emp<=`y'replace db_firmsize_sort=db_firmsize_sort+ `x' if max_emp>=`x' & max_emp<=`y'egen sum=sum(counter) if  max_emp>=`x' & max_emp<=`y'replace db_number_obs=sum if  max_emp>=`x' & max_emp<=`y'drop sum}count if max_emp>250sum max_emp if max_emp>250, detailreplace db_firmsize="Firm Size = over 250" if max_emp>250replace db_firmsize_sort=db_firmsize_sort+ 250 if max_emp>250egen sum=sum(counter) if  max_emp>250replace db_number_obs=sum if  max_emp>250drop sumforvalues x=1/10 {display "Summary Stats where Firm Size = " `x'sum msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee max_rev msgSenders* mtgAttendees if max_emp==`x', detail}/*dummy regression to open outreg files*/reg produc producoutreg2 using "output/regression_overload_$S_DATE",  excel replace*foreach var in msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee TotTwoAttendeeMtgCount TotThreeAttendeeMtgCount TotFourAttendeeMtgCount TotFiveAttendeeMtgCount    {foreach var in msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee     {*egen ptile1=pctile(`var'), p(1)*egen ptile99=pctile(`var'), p(99)*quietly areg z_produc c.z_`var'##c.z_`var' z_min_year if lineofbusiness~="" & (`var'>ptile1 & `var'<ptile99), absorb(CountryName)*quietly areg z_produc c.z_`var'##c.z_`var' z_min_year if lineofbusiness~="", absorb(CountryName)quietly areg produc c.`var'##c.`var' min_year if lineofbusiness~="", absorb(CountryName)local Country_num=e(df_a)+1*areg produc c.`var'##c.`var' Countrydum* firm_age if (`var'>ptile1 & `var'<ptile99), absorb(line)*areg z_produc c.z_`var'##c.z_`var' Countrydum* z_min_year  , absorb(line)areg produc c.`var'##c.`var' Countrydum* min_year  , absorb(line)outreg2 using "output/regression_overload_$S_DATE",  excel append drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num')**Automate the margins calculations**egen max=max(`var') egen max2=max(max)replace max2=round(max2)egen min=min(`var') egen min2=min(min)replace min2=round(min2)g diff=max2-min2replace diff=(diff/10)g diff2=round(diff)local x=min2local y=max2 local z=diff2**Calculate margins***margins, at(z_`var'=(-1(1)9)) saving(data\\f`var', replace)margins, at(`var'=(`x'(`z')`y')) saving(data\\f`var', replace)**Plot margins**marginsplot, ytitle("Productivity (Revenue per Employee in Millions)")  plotopts(msymbol(none)) title("Productivity by Level of" "`: variable label `var''") noci *marginsplot, ytitle("Productivity (Revenue per Employee, Standardized)")  plotopts(msymbol(none)) title("Productivity by Level of" "`: variable label z_`var''") noci yscale(r(-1.5(.5)1)) ylabel(-1.5(.5)1) xscale(r(-1(1)9)) xlabel(-1(1)9) *marginsplot, ytitle("Productivity (Revenue per Employee, Standardized)")  plotopts(msymbol(none)) title("Productivity by Level of" "`: variable label z_`var''") noci yscale(r(-1.5(.5)1)) ylabel(-1.5(.5)1)quietly graph save "output/`var'_prod", replace*PNG doesn't work on Stata console*png2rtf using "output/overload_$S_DATE.doc", g("output/tmp.png") append*drop ptile* newdrop  max* min min2 diff*} foreach var in msgSentPerUser_int   {sum `var' if max_emp==1*quietly areg max_rev c.`var'##c.`var' min_year if lineofbusiness~="" & max_emp==1, absorb(CountryName)quietly areg max_rev c.`var'##c.`var' min_year if max_emp==1, absorb(CountryName)local Country_num=e(df_a)+1areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==1, absorb(line)*areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==1, absorb(line)outreg2 using "output/regression_small_firm_$S_DATE", replace excel  drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num', Number of Employees, 1)}foreach var in msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee  {sum `var' if max_emp==1*quietly areg max_rev c.`var'##c.`var' min_year if lineofbusiness~="" & max_emp==1, absorb(CountryName)quietly areg max_rev c.`var'##c.`var' min_year if  max_emp==1, absorb(CountryName)local Country_num=e(df_a)+1areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==1, absorb(line)*areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==1, absorb(line)outreg2 using "output/regression_small_firm_$S_DATE", append excel  drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num', Number of Employees, 1)}forvalues x=2/10 {foreach var in msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee     {sum `var' if max_emp==`x'*quietly areg max_rev c.`var'##c.`var' min_year if lineofbusiness~="" & max_emp==`x', absorb(CountryName)quietly areg max_rev c.`var'##c.`var' min_year if max_emp==`x', absorb(CountryName)local Country_num=e(df_a)+1*areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==`x', absorb(line)areg max_rev c.`var'##c.`var' Countrydum* min_year  if  max_emp==`x', absorb(line)outreg2 using "output/regression_small_firm_$S_DATE",  excel append drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num', Number of Employees, `x')}}/*dummy regression to open outreg files*/reg produc producoutreg2 using "output/regression_larger_firms_$S_DATE",  excel replaceg big_size=""replace big_size="11-30 Employees" if max_emp>=11 & max_emp<=30replace big_size="31-50 Employees" if max_emp>=31 & max_emp<=50replace big_size="51-100 Employees" if max_emp>=51 & max_emp<=100replace big_size="101-250 Employees" if max_emp>=101 & max_emp<=250replace big_size="251+ Employees" if max_emp>=251*Checkingbysort big_size: tab max_empdrop if msgSentPerUser_int==. & msgSentPerUser_ext==. & mtgsPerUser==. & mtgHoursPerAttendee==. drop if produc==.foreach group in "11-30 Employees" "31-50 Employees" "51-100 Employees"  "101-250 Employees" "251+ Employees" {display "Summary Stats where Firm Size = " "`group'"sum max_emp msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee produc  msgSenders* mtgAttendees if big_size=="`group'", detail}foreach group in "11-30 Employees" "31-50 Employees" "51-100 Employees"  "101-250 Employees" "251+ Employees" {foreach var in msgSentPerUser_int msgSentPerUser_ext mtgsPerUser mtgHoursPerAttendee     {*sum `var' if max_emp==`x'quietly areg produc c.`var'##c.`var' min_year if lineofbusiness~="" & big_size=="`group'", absorb(CountryName)*quietly areg max_rev c.`var'##c.`var' min_year if big_size=="`group'", absorb(CountryName)local Country_num=e(df_a)+1areg produc c.`var'##c.`var' Countrydum* min_year  if  big_size=="`group'", absorb(line)*areg max_rev c.`var'##c.`var' Countrydum* min_year  if  big_size=="`group'", absorb(line)*outreg2 using "output/regression_larger_firms_$S_DATE",  excel append drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num', Number of Employees, `group')outreg2 using "output/regression_larger_firms_$S_DATE",  excel append drop(Countrydum* o.Countrydum*)  label dec(4) addstat(Number of Industries, `e(df_a)'+1, Number of Countries, `Country_num') addtext(Number of Employees, "`group'")}}