capture log closeclearset more offset scheme s1color/*log using "logs\culture_of_work_$S_DATE", replaceforvalues x=4/9 {insheet using "D:\MS - 9.26.17\cultureofwork_0`x'-16.csv", names casesave "D:\MS - 9.26.17\cultureofwork_0`x'-16", replacecodebook, allclear}log using "logs\metadata_$S_DATE", replaceinsheet using "D:\MS - 9.26.17\tenantmetadata_09.25.csv", names caseforeach var in yearstarted growthpercent {replace `var'="" if `var'=="NULL"destring `var', replace}foreach var in growthsign growthtype {replace `var'="" if `var'=="NULL"}drop if oms==""save "D:\MS - 9.26.17\tenant_metadata", replace/*note status indicator0=Single Location. A business in which all operations are conducted at one physical location. It does not have branches or divisions reporting to it. It may be a parent company or subsidiary.1=Headquarters. A business having at least one branch or division reporting to it.2=Branch. A business that reports to a headquarters. It is usually the same type of business and carriers the same business name as its headquarters.4=Division. A business that reports to a headquarters, but is usually in a different line of business and carriers a different business name.note subsidary indicatorIndicates if the business is a subsidiary. A subsidiary is a corporation with more than 50% of its stock owned by another business.0=Not a Subsidiary3=A Subsidiary*/*/use "D:\MS - 9.26.17\tenant_metadata"tab subsidiaryindicator, missingtab statuscode, missingbysort statuscode: tab subsidiaryindicator, missingbysort subsidiaryindicator: tab statuscode, missing/*http://www.zerohedge.com/news/2017-05-30/which-companies-have-highest-revenue-employee*/g revperemp=revenue/numbergsort -revperlist omstenantid lineofbusiness city country numberofemployees_here statuscode subsidiaryindicator revenue yearstarted revperemp if _n<=50sort revperlist omstenantid lineofbusiness city country numberofemployees_here statuscode subsidiaryindicator revenue yearstarted revperemp if _n<=50/*For only single location areas*/keep if status==0 & subsid==0gsort -revperlist omstenantid lineofbusiness city country numberofemployees_here statuscode subsidiaryindicator revenue yearstarted revperemp if _n<=50sort revperlist omstenantid lineofbusiness city country numberofemployees_here statuscode subsidiaryindicator revenue yearstarted revperemp if _n<=50clearuse "D:\MS - 9.26.17\tenant_metadata"keep omsg counter=1collapse (sum) counter, by (oms)*Number of branches/divisions/locations/subsidiaries per Tenant ID*sum counter, detailclearuse "D:\MS - 9.26.17\tenant_metadata"g counter=1bysort oms: egen sum=sum(counter)keep if sum>=1000bysort sum oms: tab lineof countryclear/*Something to check - sales - is it all rolled up at HQ?*/use "D:\MS - 9.26.17\tenant_metadata"collapse (sum) revenue number, by (oms country line)/* take the business line with the most revenue*/gsort oms country -revenueby oms country: g counter=_ng maxbusiness=line if counter==1bysort oms country: replace max=max[_n-1] if max==""count if max==""collapse (sum) revenue number, by (oms country max)g profitperemp=revenue/numbergsort -profitsave "D:\MS - 9.26.17\tenant_metadata_test", replaceclearuse "D:\MS - 9.26.17\tenant_metadata"stopduplicates drop/*for now, do max revenue only. Add together?*/bysort Oms: egen maxrevenue=max(REV)/*i decided summing was better*/bysort Oms: egen sumrevenue=sum(REV)/*For now, do ealiest year founded*/bysort Oms: egen earlyyear=min(YEAR)/*For now, do max of employees. Sum?*/bysort Oms: egen maxemploy=max(EMP)/*i decided summing was better*/bysort Oms: egen sumemploy=sum(EMP)drop REVENUEdrop YEARdrop EMP/*replace COUNTRY="United Kingdom" if COUNTRY=="ENGLAND"replace COUNTRY="United Kingdom" if COUNTRY=="NORTHERN IRELAND"replace COUNTRY="United Kingdom" if COUNTRY=="SCOTLAND"replace COUNTRY="United Kingdom" if COUNTRY=="WALES"replace COUNTRY="United States" if COUNTRY=="USA"replace COUNTRY=proper(COUNTRY)*/*bysort Oms COUNTRY LINE: egen minyear=min(YEAR)duplicates drop*bysort Oms COUNTRY YEAR: g counter=_nbysort Oms : g counter=_nsum counter, detailbysort Oms: egen max=max(counter)sum max, detaildrop LINEdrop counterduplicates dropbysort Oms : g counter=_nsum counter, detaildrop maxreshape wide COUN, i(Oms max* sum*) j(counter)save "data\tenant_metadata2", replaceclearuse "data\tenant_metadata2"joinby Oms using "data\MS_collapse_by_tenant_merge_$S_DATE", unmatched(both)tab Country if _m==1tab Country if _m==2tab Country if _m==3/* calculating the countries NOT in D&B"keep Country _mbysort Country: g counter=_nbysort Country: egen max=max(counter)keep if max==1counttab Country*/keep if _m==3save "data\meta_MS_merge_$S_DATE", replaceclear*/*THIS IS FULL DATASET*use "data\tenant_metadata"tab COUNTRYreplace COUNTRY=proper(COUNTRY)replace REVENUE=REVENUE/1000000label var REVENUE  "Revenue, in $M"g productivity= REVENUE/ EMPCOUNTsum productivity, detailhistogram productivity, percent b1title("Productivity (Revenue/Employees in Mill)")graph save "output\\prod_metadata", replacegraph export "output\\prod_metadata.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_metadata.png") replacesum REVENUE, detailsum EMPCOUNT, detailsum productivity, detailegen ptile1_productivity=pctile(productivity), p(1)egen ptile99_productivity=pctile(productivity), p(99)egen ptile999_productivity=pctile(productivity), p(99.9)histogram productivity if productivity>=ptile1_productivity & productivity<=ptile99_productivity, percent b1title("Prod (Rev/Emp) in Mill" "No outliers")graph save "output\\prod_metadata_s", replacegraph export "output\\prod_metadata_s.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_metadata_s.png") appendbysort COUNTRY: egen productivity2=mean(productivity) if EMPCOUNT<=2gsort -productivity2g order=_ngraph bar productivity2 if EMPCOUNT<=2, over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees<=2") nofillgraph save "output\\prod_2", replacegraph export "output\\prod_2.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_2.png") appenddrop productivity2 order bysort COUNTRY: egen productivity2=mean(productivity) if EMPCOUNT>2 & EMPCOUNT<=6gsort -productivity2g order=_ngraph bar productivity2 if EMPCOUNT>2 & EMPCOUNT<=6, over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 2-6") nofillgraph save "output\\prod_2_6", replacegraph export "output\\prod_2_6.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_2_6.png") appenddrop productivity2 order bysort COUNTRY: egen productivity2=mean(productivity) if EMPCOUNT>6 & EMPCOUNT<=20gsort -productivity2g order=_ngraph bar productivity2 if EMPCOUNT>6 & EMPCOUNT<=20, over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 6-20") nofillgraph save "output\\prod_6_20", replacegraph export "output\\prod_6_20.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_6_20.png") appenddrop productivity2 order bysort COUNTRY: egen productivity2=mean(productivity) if EMPCOUNT>20 & EMPCOUNT<=100gsort -productivity2g order=_ngraph bar productivity2 if EMPCOUNT>20 & EMPCOUNT<=100, over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 20-100") nofillgraph save "output\\prod_20_100", replacegraph export "output\\prod_20_100.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_20_100.png") appenddrop productivity2 order bysort COUNTRY: egen productivity2=mean(productivity) if EMPCOUNT>100 gsort -productivity2g order=_ngraph bar productivity2 if EMPCOUNT>100, over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 100+") nofillgraph save "output\\prod_100", replacegraph export "output\\prod_100.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_100.png") appenddrop productivity2 order bysort COUNTRY: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2 , over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp), in Mill") xsize(8) b1title("Countries") nofillgraph save "output\\prod_big", replacegraph export "output\\prod_big.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_big.png") appenddrop productivity2 order drop if productivity<=ptile1_productivity drop if productivity>=ptile99_productivitybysort COUNTRY: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2 , over(COUNTRY, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp), in Mill") xsize(8) b1title("Countries" "No Outliers") nofillgraph save "output\\prod_s", replacegraph export "output\\prod_s.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_s.png") appendclear*THIS IS ONLY MERGED*This country uses the country that is in the MS datause "data\meta_MS_merge_$S_DATE/*g match=0forvalues x=1/14 {replace match=1 if COUNTRY`x'==Country}/*if match=0, there countries don't match with D&B*/log using "logs/tenants_$S_DATE", replace*bysort TenantSize: sum maxemp, detail/*This is weird*/bysort TenantSize: sum sumemp, detail*/replace maxrevenue=maxrevenue/1000000label var maxrevenue "Maximum revenue - in Millions"replace sumrevenue=sumrevenue/1000000label var sumrevenue "Sum of revenue - in Millions"g productivity=sumrevenue/sumempsum maxrevenue, detailsum sumrevenue, detailsum sumemp, detailsum productivity, detailbysort Country: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Productivity (Revenue/Employee)in mill") xsize(8) b1title("Countries") nofillgraph save "output\\prod", replacegraph export "output\\prod.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod.png") appendbysort Country: g counter=_ngsort -productivity2list Country productivity2 if counter==1drop counterforeach var in maxrevenue sumemp productivity msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize {egen ptile1_`var'=pctile(`var'), p(1)egen ptile99_`var'=pctile(`var'), p(99)egen ptile999_`var'=pctile(`var'), p(99.9)}drop if productivity<=ptile1_productivitydrop if productivity>=ptile99_productivitydrop productivity2drop orderbysort Country: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Productivity (Revenue/Employee)in mill") xsize(8) b1title("Countries" "no outliers") nofillgraph save "output\\prod_small", replacegraph export "output\\prod_small.png", replacepng2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_small.png") appendbysort Country: g counter=_ngsort -productivity2list Country productivity2 if counter==1drop countersave "data\meta_MS_merge_2_$S_DATE", replacecollapse (mean) maxrevenue sumemp msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize  productivity ptile*, by (Country)foreach var in maxrevenue sumemp msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize  {pwcorr productivity `var' if `var'>= ptile1_`var' & `var'<= ptile99_`var', sigscatter productivity `var' if `var'>= ptile1_`var' & `var'<= ptile99_`var', ||  lfit productivity `var' if `var'>= ptile1_`var' & `var'<= ptile99_`var'*graph save "output\\prod_`var'", replace*graph export "output\\prod_`var'.png", replace*png2rtf using "output\\prod_$S_DATE.doc", g("output\\prod_`var'.png") append}dotplot productivityclearuse "data\meta_MS_merge_2_$S_DATE"*do something by size*stopforeach var in idv_reverse lto pdi {gsort -`var'g order=_nlocal mytitle : variable label `var'*graph bar  `var', over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle(`mytitle') xsize(8) b1title("Countries") nofillegen mean=mean(`var')local mean=meangraph bar  `var', over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle(`mytitle') xsize(8)  nofill yline(`mean')  bar(1,color(blue))drop order meangraph save "output\\`var'", replacegraph export "output\\`var'.png", replace}stopstopdrop if _m==1drop _mstopstopdrop GRWPCT GRWSIGN GRWTYPE POSTALCD POSTALCD CITY COUNTRYjoinby Oms using "data\MS_collapse_by_tenant_merge_$S_DATE", unmatched(both)g match=0forvalues x=1/14 {replace match=1 if Country==COUNTRY`x'}insheet using "data\cultureofwork_02-16.csv", names caseforeach var in msgSenders_int msgSentPerUser_int msgSentLowerQtileVal_int msgSentUpperQtileVal_int msgSenders_ext msgSentPerUser_ext msgSentLowerQtileVal_ext msgSentUpperQtileVal_ext mtgAttendees mtgHoursPerAttendee mtgHoursLowerQtileVal mtgHoursUpperQtileVal mtgsPerUser mtgsPerTenant TotalMeetingAttendanceCount TotalMeetingCount TotalTwoAttendeeMeetingCount TotalThreeAttendeeMeetingCount TotalFourAttendeeMeetingCount TotalFiveAttendeeMeetingCount TotalSixAttendeeMeetingCount TotalSevenAttendeeMeetingCount TotalEightAttendeeMeetingCount TotalNineAttendeeMeetingCount TotalTenPlusAttendeeMeetingCount {replace `var'="" if `var'=="#NUL#"destring `var', replace}save "data\cultureofwork_02-16", replacestopinsheet using "data\messagenetworksize_10-16.csv", names caseforeach var in internal_population internal_mean_contacts internal_stdev_contacts external_population external_mean_contacts external_stdev_contacts {replace `var'="" if `var'=="#NUL#"destring `var', replace}save "data\messagenetworksize_10-16.dta", replacestopsave "data\MS_collapse_by_tenant_merge_$S_DATE", replace