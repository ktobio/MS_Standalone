capture log closeclearset more offssc install outreg2log using "logs/world_analyses", replaceuse "data/MS_collapse_by_tenant_world_db"g productivity=(maxrev/1000000)/maxempsum productivity, detail*ID Outliers*foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize TotalHumanMailboxes UserCount mtgAttendees msgSenders {egen ptile1_`var'=pctile(`var'), p(1)egen ptile99_`var'=pctile(`var'), p(99)egen ptile999_`var'=pctile(`var'), p(99.9)}*Summmary stats here*sum msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksizetab TenantSizebysort TenantSize: sum msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksizebysort Industry: sum msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksizeforeach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize {g l`var'=log(`var')}quietly tab Ind, gen(inddum)d inddum*quietly tab Tenant, gen(sizedum)d sizedum*/*REGRESSIONS - PDI, IDV LTO plus Controls*/pwcorr  pdi idv lto foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {regress `DV' pdi  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs replace addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' idv  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' lto  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv lto inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv lto  lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') sortvar(pdi idv lto  lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5)*erase "output/`DV'_$S_DATE.txt"}/*REGRESSIONS - PDI and IDV plus Controls*/foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {*foreach DV in lmsgSentPerUser {regress `DV' pdi lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label replace noobs addtext("# Countries", `number', "Observations or # tenants", `obs')}foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {*foreach DV in lmsgSentPerUser {regress `DV' idv lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv c.pdi#c.idv lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') sortvar(pdi idv c.pdi#c.idv lyr2015gdp_pc lyr2016pop  inddum2-inddum8 sizedum2-sizedum5)*erase "output/`DV'_$S_DATE.txt"}/*REGRESSIONS - PDI, IDV and UAI plus Controls*/foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {regress `DV' pdi inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "20170807\\`DV'_$S_DATE", excel label replace noobs addtext("# Countries", `number', "Observations or # tenants", `obs')}foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {regress `DV' idv  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' uai  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' tightness  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv uai inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv uai tightness  inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv uai lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') regress `DV' pdi idv uai tightness lyr2015gdp_pc lyr2016pop inddum2-inddum8 sizedum2-sizedum5, cluster(Country)local number=e(N_clust)local obs=e(N)outreg2 using "output/`DV'_$S_DATE", excel label  noobs append addtext("# Countries", `number', "Observations or # tenants", `obs') sortvar(pdi idv uai tightness lyr2015gdp_pc lyr2016pop  inddum2-inddum8 sizedum2-sizedum5)*erase "output/`DV'_$S_DATE.txt"}/*REGRESSIONS - TRUST VARIABLES*/foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {regress `DV' prosocial_oecd inddum2-inddum8 sizedum2-sizedum5, cluster(Country)outreg2 using "output/`DV'_$S_DATE", excel label replace}foreach DV in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize {foreach IV in antisocial_oced trustinthepolice trustpolitical_oecd trustinpolice_oecd trustinothers_oecd trustinothers_wvs2014 {regress `DV' `IV' inddum2-inddum8 sizedum2-sizedum5, cluster(Country)outreg2 using "output/`DV'_$S_DATE", excel label append }}/*CREATING HISTOGRAMS*/bysort Country: g tenants_in_country=_Nlabel var tenants_in_country "Number of Tenants in Country"drop if tenants_in_country<=1*quietly scatter lmsgSentPerUser lmsgSentPerUser *graph save tmp, replace*png2rtf using "histograms_$S_DATE.doc", g(tmp) replace  *foreach var in lmsgSentPerUser lmtgHoursPerAttendee lMeanUtilization lMeanAfterHoursWork linternalnetworksize lexternalnetworksize msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize  {foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize TotalHumanMailboxes UserCount mtgAttendees msgSenders {egen ptile1=pctile(`var'), p(1)egen ptile99=pctile(`var'), p(99)/**egen ptile10=pctile(`var'), p(10)*egen ptile90=pctile(`var'), p(90)sum `var', detail*sum `var' if `var'>=ptile1 & `var'<=ptile99, detailsum `var' if `var'<=1, detailsum `var' if `var'<=0, detailsum `var' if `var'<=ptile1, detail*sum `var' if `var'>=ptile99, detailtab Tenant if `var'<=ptile1 *tab Tenant if `var'>=ptile99tab IndustryG if `var'<=ptile1 tab Country if `var'<=ptile1 *drop ptile**/histogram `var' if `var'>=ptile1 & `var'<=ptile99, fractiongraph save "output/hist_`var'_all", replace*png2rtf using "output/histograms_$S_DATE.doc", g("hist_`var'_all") appendhistogram `var' if `var'>=ptile1 & `var'<=ptile99, by(Country) fractiongraph save "output/hist_`var'_by_country", replace*png2rtf using "output/histograms_$S_DATE.doc", g("hist_`var'_by_country") appenddrop ptile*}replace Tenant="1. 1-250" if Tenant=="1 - SMB: 1-250"replace Tenant="2. 250-500" if Tenant=="2 - SMS&P (Medium/Small): 250-500"replace Tenant="3. 500-1000" if Tenant=="3 - SMS&P (Medium/Large): 500-1000"replace Tenant="4. 1000-5000" if Tenant=="4 - Corporate Enterprise (EPG): 1000-5000"replace Tenant="5. 5000+" if Tenant=="5 - Major Large Enterprise: 5000+"*scatter lmsgSentPerUser lmsgSentPerUser *graph save tmp, replace*png2rtf using "output/histograms_$S_DATE.doc", g(tmp) replace	  *levelsof Tenant, local(levels)*foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize TotalHumanMailboxes UserCount mtgAttendees msgSenders {foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize  {*foreach l of local levels {egen ptile1=pctile(`var'), p(1)egen ptile99=pctile(`var'), p(99)*histogram `var' if `var'>=ptile1 & `var'<=ptile99 & Tenant=="`l'", fraction*graph save "hist_`var'_all", replace**png2rtf using "histograms_$S_DATE.doc", g("hist_`var'_all") appendhistogram `var' if `var'>=ptile1 & `var'<=ptile99, by(Tenant) fraction bin(20)*histogram `var', by(Tenant) fractiongraph save "output/hist_`var'_by_size", replace*png2rtf using "output/histograms_$S_DATE.doc", g("hist_`var'_by_size") appenddrop ptile**erase "output/hist_`var'_by_size"}*levelsof Tenant, local(levels)*foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize TotalHumanMailboxes UserCount mtgAttendees msgSenders {foreach var in msgSentPerUser mtgHoursPerAttendee MeanUtilization MeanAfterHoursWork internalnetworksize externalnetworksize  {*foreach l of local levels {egen ptile1=pctile(`var'), p(1)egen ptile99=pctile(`var'), p(99)*histogram `var' if `var'>=ptile1 & `var'<=ptile99 & Tenant=="`l'", fraction*graph save "hist_`var'_all", replace**png2rtf using "histograms_$S_DATE.doc", g("hist_`var'_all") appendhistogram `var' if `var'>=ptile1 & `var'<=ptile99, by(Industry) fraction bin(20)*histogram `var', by(Tenant) fractiongraph save "output/hist_`var'_by_ind", replace*png2rtf using "output/histograms_$S_DATE.doc", g("hist_`var'_by_ind") appenddrop ptile**erase "output/hist_`var'_by_ind"}clearuse "data/MS_collapse_by_tenant_world_db"keep yr2015broadband yr2015gdp_pc yr2016pop Countryduplicates dropreplace yr2016=yr2016/1000000label var yr2016pop "Total Population 2016 in Millions"label var yr2015broad "Fixed broadband subscriptions 2015 per 100 people"foreach var in yr2015broadband yr2015gdp_pc yr2016pop {gsort -`var'g order=_nlocal mytitle : variable label `var'egen mean=mean(`var')local mean=meangraph bar  `var', over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle(`mytitle') xsize(11)  nofill yline(`mean')  bar(1,color(orange))drop order meangraph save "output/`var'", replace**graph export "output/`var'.png", replace}use "data/MS_collapse_by_tenant_world_db"foreach var in idv_reverse lto pdi {gsort -`var'g order=_nlocal mytitle : variable label `var'*graph bar  `var', over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle(`mytitle') xsize(8) b1title("Countries") nofillegen mean=mean(`var')local mean=meangraph bar  `var', over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle(`mytitle') xsize(8)  nofill yline(`mean')  bar(1,color(blue))drop order meangraph save "output/`var'", replace*graph export "output/`var'.png", replace}histogram productivity, percent b1title("Productivity (Revenue/Employees in Mill)")graph save "output/prod_metadata", replace*graph export "output/prod_metadata.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_metadata.png") replaceegen ptile1_productivity=pctile(productivity), p(1)egen ptile99_productivity=pctile(productivity), p(99)egen ptile999_productivity=pctile(productivity), p(99.9)histogram productivity if productivity>=ptile1_productivity & productivity<=ptile99_productivity, percent b1title("Prod (Rev/Emp) in Mill" "No outliers")graph save "output/prod_metadata_s", replace*graph export "output/prod_metadata_s.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_metadata_s.png") appendbysort Country: egen productivity2=mean(productivity) if maxemp<=2gsort -productivity2g order=_ngraph bar productivity2 if maxemp<=2, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees<=2") nofillgraph save "output/prod_2", replace*graph export "output/prod_2.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_2.png") appenddrop productivity2 order bysort Country: egen productivity2=mean(productivity) if maxemp>2 & maxemp<=6gsort -productivity2g order=_ngraph bar productivity2 if maxemp>2 & maxemp<=6, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 2-6") nofillgraph save "output/prod_2_6", replace*graph export "output/prod_2_6.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_2_6.png") appenddrop productivity2 order bysort Country: egen productivity2=mean(productivity) if maxemp>6 & maxemp<=20gsort -productivity2g order=_ngraph bar productivity2 if maxemp>6 & maxemp<=20, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 6-20") nofillgraph save "output/prod_6_20", replace*graph export "output/prod_6_20.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_6_20.png") appenddrop productivity2 order bysort Country: egen productivity2=mean(productivity) if maxemp>20 & maxemp<=100gsort -productivity2g order=_ngraph bar productivity2 if maxemp>20 & maxemp<=100, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 20-100") nofillgraph save "output/prod_20_100", replace*graph export "output/prod_20_100.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_20_100.png") appenddrop productivity2 order bysort Country: egen productivity2=mean(productivity) if maxemp>100 gsort -productivity2g order=_ngraph bar productivity2 if maxemp>100, over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp) in Mill") xsize(8) b1title("Countries" "# Employees 100+") nofillgraph save "output/prod_100", replace*graph export "output/prod_100.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_100.png") appenddrop productivity2 order bysort Country: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2 , over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp), in Mill") xsize(8) b1title("Countries") nofillgraph save "output/prod_big", replace*graph export "output/prod_big.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_big.png") appenddrop productivity2 order drop if productivity<=ptile1_productivity drop if productivity>=ptile99_productivitybysort Country: egen productivity2=mean(productivity)gsort -productivity2g order=_ngraph bar productivity2 , over(Country, sort(order) label(angle(45) labsize(vsmall))) ytitle("Prod (Rev/Emp), in Mill") xsize(8) b1title("Countries" "No Outliers") nofillgraph save "output/prod_s", replace*graph export "output/prod_s.png", replace*png2rtf using "output/prod_$S_DATE.doc", g("output/prod_s.png") append